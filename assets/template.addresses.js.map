{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/templates/customers/addresses.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","3","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_typeof3","obj","default","loadCountries","locale","fetch","GRAPHQL_ENDPOINT","method","headers","Content-Type","Access-Control-Allow-Origin","body","JSON","stringify","query","operationName","variables","supportedLocale","replace","toUpperCase","SUPPORTED_LOCALES","indexOf","substring","DEFAULT_LOCALE","then","res","json","countries","FIELD_REGEXP","INPUT_SELECTORS","lastName","firstName","company","address1","address2","country","zone","postalCode","city","phone","AddressForm","rootEl","options","formElements","inputSelectors","elements","keys","forEach","inputKey","input","querySelector","wrapper","parentElement","labels","document","querySelectorAll","id","to","index","arguments","nextSource","nextKey","elementKey","element","TypeError","shippingCountriesOnly","location","origin","meta","ships_to_countries","catch","Promise","resolve","shippingCountryCodes","countrySelect","duplicatedCountrySelect","cloneNode","optionElement","createElement","code","textContent","dataset","appendChild","innerHTML","selectedCountry","addEventListener","event","handleCountryChange","target","includedCountryCodes","filter","countryCode","formElementName","label","formFormat","newFormat","countryWrapper","afterCountry","format","split","map","fields","match","fieldName","newFieldName","row","line","lineCount","append","insertBefore","zoneEl","zones","ariaHidden","zoneSelect","duplicatedZoneSelect","scrollIt","scrollTo","behavior","left","top","offsetTop","hideClass","addAddressFields","addNewAddress","allEditForms","cleanForm","classList","remove","reset","add","editAddressButton","button","formId","addressForm","deleteForm","addressFields","cancelButton","form","screen","width","editableAddress","confirmMessage","getAttribute","confirm","preventDefault","addressToggle"],"mappings":"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","file":"template.addresses.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t3: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"shopifySlateJsonp\"] = window[\"shopifySlateJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([132,8]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","'use strict';\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Customer Addresses Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Customer Addresses\n * template.\n *\n * @namespace customerAddresses\n */\n\nvar query = 'query countries($locale: SupportedLocale!) {' + '  countries(locale: $locale) {' + '    name' + '    code' + '    labels {' + '      address1' + '      address2' + '      city' + '      company' + '      country' + '      firstName' + '      lastName' + '      phone' + '      postalCode' + '      zone' + '    }' + '    formatting {' + '      edit' + '    }' + '    zones {' + '      name' + '      code' + '    }' + '  }' + '}';\n\nvar GRAPHQL_ENDPOINT = 'https://country-service.shopifycloud.com/graphql';\n\nfunction loadCountries(locale) {\n  var response = fetch(GRAPHQL_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify({\n      query: query,\n      operationName: 'countries',\n      variables: {\n        locale: toSupportedLocale(locale)\n      }\n    })\n  });\n\n  return response.then(function (res) {\n    return res.json();\n  }).then(function (countries) {\n    return countries.data.countries;\n  });\n}\n\nvar DEFAULT_LOCALE = 'EN';\nvar SUPPORTED_LOCALES = ['DA', 'DE', 'EN', 'ES', 'FR', 'IT', 'JA', 'NL', 'PT', 'PT_BR'];\n\nfunction toSupportedLocale(locale) {\n  var supportedLocale = locale.replace(/-/, '_').toUpperCase();\n\n  if (SUPPORTED_LOCALES.indexOf(supportedLocale) !== -1) {\n    return supportedLocale;\n  } else if (SUPPORTED_LOCALES.indexOf(supportedLocale.substring(0, 2)) !== -1) {\n    return supportedLocale.substring(0, 2);\n  } else {\n    return DEFAULT_LOCALE;\n  }\n}\n\nfunction mergeObjects() {\n  var to = Object({});\n\n  for (var index = 0; index < arguments.length; index++) {\n    var nextSource = arguments[index];\n\n    if (nextSource) {\n      for (var nextKey in nextSource) {\n        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n          to[nextKey] = nextSource[nextKey];\n        }\n      }\n    }\n  }\n  return to;\n}\n\nvar FIELD_REGEXP = /({\\w+})/g;\nvar LINE_DELIMITER = '_';\nvar INPUT_SELECTORS = {\n  lastName: '[name=\"address[last_name]\"]',\n  firstName: '[name=\"address[first_name]\"]',\n  company: '[name=\"address[company]\"]',\n  address1: '[name=\"address[address1]\"]',\n  address2: '[name=\"address[address2]\"]',\n  country: '[name=\"address[country]\"]',\n  zone: '[name=\"address[province]\"]',\n  postalCode: '[name=\"address[zip]\"]',\n  city: '[name=\"address[city]\"]',\n  phone: '[name=\"address[phone]\"]'\n};\n\nfunction AddressForm(rootEl, locale, options) {\n  locale = locale || 'en';\n  options = options || { inputSelectors: {} };\n  var formElements = loadFormElements(rootEl, mergeObjects(INPUT_SELECTORS, options.inputSelectors));\n\n  validateElements(formElements);\n\n  return loadShippingCountries(options.shippingCountriesOnly).then(function (shippingCountryCodes) {\n    return loadCountries(locale).then(function (countries) {\n      init(rootEl, formElements, filterCountries(countries, shippingCountryCodes));\n    });\n  });\n}\n\n/**\n * Runs when countries have been loaded\n */\nfunction init(rootEl, formElements, countries) {\n  populateCountries(formElements, countries);\n  var selectedCountry = formElements.country.input ? formElements.country.input.value : null;\n  setEventListeners(rootEl, formElements, countries);\n  handleCountryChange(rootEl, formElements, selectedCountry, countries);\n}\n\n/**\n * Handles when a country change: set labels, reorder fields, populate zones\n */\nfunction handleCountryChange(rootEl, formElements, countryCode, countries) {\n  var country = getCountry(countryCode, countries);\n\n  setLabels(formElements, country);\n  reorderFields(rootEl, formElements, country);\n  populateZones(formElements, country);\n}\n\n/**\n * Sets up event listener for country change\n */\nfunction setEventListeners(rootEl, formElements, countries) {\n  formElements.country.input.addEventListener('change', function (event) {\n    handleCountryChange(rootEl, formElements, event.target.value, countries);\n  });\n}\n\n/**\n * Reorder fields in the DOM and add data-attribute to fields given a country\n */\nvar newFormat = '{firstName}{address1}_{lastName}{address2}{zip}_{company}{city}_{phone}{country}{province}';\n\nfunction reorderFields(rootEl, formElements, country) {\n  var formFormat = newFormat;\n\n  var countryWrapper = formElements.country.wrapper;\n  var afterCountry = false;\n\n  getOrderedField(formFormat).forEach(function (row) {\n    row.forEach(function (line) {\n      formElements[line].wrapper.dataset.lineCount = row.length;\n      formElements[line].wrapper.dataset.name = line;\n      if (!formElements[line].wrapper) {\n        return;\n      }\n      if (line === 'country') {\n        afterCountry = true;\n        return;\n      }\n\n      if (afterCountry) {\n        rootEl.append(formElements[line].wrapper);\n      } else {\n        rootEl.insertBefore(formElements[line].wrapper, countryWrapper);\n      }\n    });\n  });\n}\n\n/**\n * Update labels for a given country\n */\nfunction setLabels(formElements, country) {\n  Object.keys(formElements).forEach(function (formElementName) {\n    formElements[formElementName].labels.forEach(function (label) {\n      if (country.labels[formElementName] == 'Apartment, suite, etc.') {\n        label.textContent = 'Apt';\n      } else if (country.labels[formElementName] == 'Postal code') {\n        label.textContent = 'Zip code';\n      } else {\n        label.textContent = country.labels[formElementName];\n      }\n    });\n  });\n}\n\n/**\n * Add right countries in the dropdown for a given country\n */\nfunction populateCountries(formElements, countries) {\n  var countrySelect = formElements.country.input;\n  var duplicatedCountrySelect = countrySelect.cloneNode(true);\n\n  countries.forEach(function (country) {\n    var optionElement = document.createElement('option');\n    optionElement.value = country.code;\n    optionElement.textContent = country.name;\n    if (countrySelect.dataset.default == country.name) {\n      countrySelect.dataset.default = country.code;\n    }\n    duplicatedCountrySelect.appendChild(optionElement);\n  });\n\n  countrySelect.innerHTML = duplicatedCountrySelect.innerHTML;\n\n  if (countrySelect.dataset.default) {\n    countrySelect.value = countrySelect.dataset.default;\n  }\n}\n\n/**\n * Add right zones in the dropdown for a given country\n */\nfunction populateZones(formElements, country) {\n  var zoneEl = formElements.zone;\n  if (!zoneEl) {\n    return;\n  }\n\n  if (country.zones.length === 0) {\n    zoneEl.wrapper.dataset.ariaHidden = 'true';\n    zoneEl.input.innerHTML = '';\n    return;\n  }\n\n  zoneEl.wrapper.dataset.ariaHidden = 'false';\n\n  var zoneSelect = zoneEl.input;\n  var duplicatedZoneSelect = zoneSelect.cloneNode(true);\n  duplicatedZoneSelect.innerHTML = '';\n\n  country.zones.forEach(function (zone) {\n    var optionElement = document.createElement('option');\n    optionElement.value = zone.code;\n    optionElement.textContent = zone.name;\n    duplicatedZoneSelect.appendChild(optionElement);\n    if (zoneSelect.dataset.default == zone.name) {\n      zoneSelect.dataset.default = zone.code;\n    }\n  });\n\n  zoneSelect.innerHTML = duplicatedZoneSelect.innerHTML;\n\n  if (zoneSelect.dataset.default) {\n    zoneSelect.value = zoneSelect.dataset.default;\n  }\n}\n\n/**\n * Will throw if an input or a label is missing from the wrapper\n */\nfunction validateElements(formElements) {\n  Object.keys(formElements).forEach(function (elementKey) {\n    var element = formElements[elementKey].input;\n    var labels = formElements[elementKey].labels;\n\n    if (!element) {\n      return;\n    }\n\n    if ((typeof element === 'undefined' ? 'undefined' : (0, _typeof3.default)(element)) !== 'object') {\n      throw new TypeError(formElements[elementKey] + ' is missing an input or select.');\n    } else if ((typeof labels === 'undefined' ? 'undefined' : (0, _typeof3.default)(labels)) !== 'object') {\n      throw new TypeError(formElements[elementKey] + ' is missing a label.');\n    }\n  });\n}\n\n/**\n * Given an countryCode (eg. 'CA'), will return the data of that country\n */\nfunction getCountry(countryCode, countries) {\n  countryCode = countryCode || 'CA';\n  return countries.filter(function (country) {\n    return country.code === countryCode;\n  })[0];\n}\n\n/**\n * Given a format (eg. \"{firstName}{address1}_{lastName}{address2}{zip}_{company}{city}_{phone}{country}{province}\")\n * will return an array of how the form needs to be formatted, eg.:\n * =>\n * [\n *   ['firstName', 'address1'],\n *   ['lastName', 'address2', 'zip'],\n *   ['company', 'city' ],\n *   ['phone', 'country', 'province']\n * ]\n */\n\nfunction getOrderedField(format) {\n  return format.split(LINE_DELIMITER).map(function (fields) {\n    var result = fields.match(FIELD_REGEXP);\n    if (!result) {\n      return [];\n    }\n    return result.map(function (fieldName) {\n      var newFieldName = fieldName.replace(/[{}]/g, '');\n\n      switch (newFieldName) {\n        case 'zip':\n          return 'postalCode';\n        case 'province':\n          return 'zone';\n        default:\n          return newFieldName;\n      }\n    });\n  });\n}\n\n/**\n * Given a rootEl where all `input`s, `select`s, and `labels` are nested, it\n * will returns all form elements (wrapper, input and labels) of the form.\n * See `FormElements` type for details\n */\nfunction loadFormElements(rootEl, inputSelectors) {\n  var elements = {};\n  Object.keys(INPUT_SELECTORS).forEach(function (inputKey) {\n    var input = rootEl.querySelector(inputSelectors[inputKey]);\n    elements[inputKey] = input ? {\n      wrapper: input.parentElement,\n      input: input,\n      labels: document.querySelectorAll('[for=\"' + input.id + '\"]')\n    } : {};\n  });\n\n  return elements;\n}\n\n/**\n * If shippingCountriesOnly is set to true, will return the list of countries the\n * shop ships to. Otherwise returns null.\n */\nfunction loadShippingCountries(shippingCountriesOnly) {\n  if (!shippingCountriesOnly) {\n    // eslint-disable-next-line no-undef\n    return Promise.resolve(null);\n  }\n\n  var response = fetch(location.origin + '/meta.json');\n\n  return response.then(function (res) {\n    return res.json();\n  }).then(function (meta) {\n    // If ships_to_countries has * in the list, it means the shop ships to\n    // all countries\n    return meta.ships_to_countries.indexOf('*') !== -1 ? null : meta.ships_to_countries;\n  }).catch(function () {\n    return null;\n  });\n}\n\n/**\n * Only returns countries that are in includedCountryCodes\n * Returns all countries if no includedCountryCodes is passed\n */\nfunction filterCountries(countries, includedCountryCodes) {\n  if (!includedCountryCodes) {\n    return countries;\n  }\n\n  return countries.filter(function (country) {\n    return includedCountryCodes.indexOf(country.code) !== -1;\n  });\n}\n\nfunction scrollIt(element) {\n  window.scrollTo({\n    behavior: 'smooth',\n    left: 0,\n    top: element.offsetTop\n  });\n}\n\nvar hideClass = 'hide';\n\nvar addAddressFields = document.querySelector('[data-add-fields-address]');\nvar addNewAddress = document.querySelector('#address_form_new');\nvar allEditForms = document.querySelectorAll('[data-address-form]');\nvar cleanForm = document.querySelector('[data-address-cancel]');\n\naddNewAddress.addEventListener('change', function () {\n  cleanForm.classList.remove(hideClass);\n});\n\ncleanForm.addEventListener('click', function () {\n  addNewAddress.reset();\n  cleanForm.classList.add(hideClass);\n});\n\nAddressForm(addAddressFields, 'en');\n\nfunction initializeAddressForm(button, formId) {\n  var addressForm = document.querySelector('[data-address-form=\"' + formId + '\"]');\n  var deleteForm = document.querySelector('[data-address-delete-form=\"' + formId + '\"]');\n  var addressFields = document.querySelector('[data-fields-address=\"' + formId + '\"]');\n  var cancelButton = document.querySelector('[data-address-cancel=\"' + formId + '\"]');\n\n  button.addEventListener('click', function () {\n    addNewAddress.classList.add(hideClass);\n    allEditForms.forEach(function (form) {\n      form.classList.add(hideClass);\n    });\n    addressForm.classList.remove(hideClass);\n    if (window.screen.width < 768) {\n      scrollIt(addressForm);\n    }\n  });\n\n  cancelButton.addEventListener('click', function () {\n    addNewAddress.classList.remove(hideClass);\n    allEditForms.forEach(function (form) {\n      form.classList.add(hideClass);\n    });\n    var editableAddress = button.parentElement;\n    if (window.screen.width < 768) {\n      scrollIt(editableAddress);\n    }\n  });\n\n  AddressForm(addressFields, 'en');\n\n  if (deleteForm) {\n    deleteForm.addEventListener('submit', function (event) {\n      var confirmMessage = deleteForm.getAttribute('data-confirm-message');\n\n      if (!window.confirm(confirmMessage || 'Are you sure you wish to delete this address?')) {\n        event.preventDefault();\n      }\n    });\n  }\n}\n\nvar editAddressButton = document.querySelectorAll('[data-address-toggle]');\n\nif (editAddressButton.length) {\n  editAddressButton.forEach(function (button) {\n    var formId = button.dataset.addressToggle;\n    initializeAddressForm(button, formId);\n  });\n}"],"sourceRoot":""}